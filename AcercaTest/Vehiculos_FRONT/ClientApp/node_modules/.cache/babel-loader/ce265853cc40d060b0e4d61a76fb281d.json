{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.actionCreators = void 0;\nvar apiUrl = \"http://localhost:42899/\"; // ----------------\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\n\nexports.actionCreators = {\n  requestVehiculos: function requestVehiculos(page, items) {\n    return function (dispatch, getState) {\n      // Only load data if it's something we don't already have (and are not already loading)\n      var appState = getState();\n      console.log(\"Trying to get Vehiculos. Page: \" + page + \", Items: \" + items);\n\n      if (appState && appState.tablaVehiculos) {\n        fetch(apiUrl + 'api/Vehiculo/getVehiculos?Page=' + page + '&Items=' + items, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors'\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          return dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: []\n        });\n      }\n    };\n  },\n  selectVehiculo: function selectVehiculo(v) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'SELECT_VEHICULOS',\n          selectedVehiculo: v\n        });\n      }\n    };\n  },\n  addVehiculo: function addVehiculo(v) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        fetch(apiUrl + 'api/Vehiculo/addVehiculo', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors'\n          },\n          body: JSON.stringify(v)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          return dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: []\n        });\n      }\n    };\n  },\n  closeModal: function closeModal() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'CLOSE_MODAL'\n        });\n      }\n    };\n  },\n  openEmptyModal: function openEmptyModal() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'OPEN_EMPTY_MODAL'\n        });\n      }\n    };\n  },\n  changeItems: function changeItems(newNumItems) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'CHANGE_ITEMS',\n          numItems: newNumItems\n        });\n      }\n    };\n  },\n  nextPage: function nextPage() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'NEXT_PAGE',\n          newPage: appState.tablaVehiculos.page + 1\n        });\n      }\n    };\n  },\n  previousPage: function previousPage() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var correctNewPage = appState.tablaVehiculos.page - 1;\n\n        if (correctNewPage < 0) {\n          correctNewPage = 0;\n        }\n\n        dispatch({\n          type: 'PREVIOUS_PAGE',\n          newPage: correctNewPage\n        });\n      }\n    };\n  }\n}; // ----------------\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\n\nvar unloadedState = {\n  vehiculos: [{\n    numPedido: 1,\n    bastidor: 21,\n    matricula: \"4139HJK\",\n    modelo: \"Seat Ibiza\",\n    fechaEntrega: \"27/05/2022\"\n  }, {\n    numPedido: 2,\n    bastidor: 22,\n    matricula: \"4139HJL\",\n    modelo: \"Seat Tarraco\",\n    fechaEntrega: \"27/06/2022\"\n  }, {\n    numPedido: 3,\n    bastidor: 23,\n    matricula: \"4139HJM\",\n    modelo: \"Seat Marbella\",\n    fechaEntrega: \"27/07/2022\"\n  }, {\n    numPedido: 4,\n    bastidor: 22,\n    matricula: \"4139HJN\",\n    modelo: \"Fiat Multipla\",\n    fechaEntrega: \"27/06/2022\"\n  }, {\n    numPedido: 5,\n    bastidor: 23,\n    matricula: \"4139HJO\",\n    modelo: \"Nissan Patrol\",\n    fechaEntrega: \"27/07/2022\"\n  }, {\n    numPedido: 6,\n    bastidor: 22,\n    matricula: \"4139HJP\",\n    modelo: \"Opel Corsa\",\n    fechaEntrega: \"27/06/2022\"\n  }, {\n    numPedido: 7,\n    bastidor: 23,\n    matricula: \"4139HJQ\",\n    modelo: \"Opel Astra\",\n    fechaEntrega: \"27/07/2022\"\n  }, {\n    numPedido: 8,\n    bastidor: 22,\n    matricula: \"4139HJR\",\n    modelo: \"Seat LeÃ³n\",\n    fechaEntrega: \"27/06/2022\"\n  }, {\n    numPedido: 9,\n    bastidor: 23,\n    matricula: \"4139HJS\",\n    modelo: \"Dacia Sandero\",\n    fechaEntrega: \"27/07/2022\"\n  }, {\n    numPedido: 10,\n    bastidor: 22,\n    matricula: \"4139HJT\",\n    modelo: \"Audi TT\",\n    fechaEntrega: \"27/06/2022\"\n  }, {\n    numPedido: 11,\n    bastidor: 23,\n    matricula: \"4139HJU\",\n    modelo: \"Peugeot 206\",\n    fechaEntrega: \"27/07/2022\"\n  }, {\n    numPedido: 12,\n    bastidor: 22,\n    matricula: \"4139HJV\",\n    modelo: \"Peugeot 207\",\n    fechaEntrega: \"27/06/2022\"\n  }, {\n    numPedido: 13,\n    bastidor: 23,\n    matricula: \"4139HJW\",\n    modelo: \"Peugeot 208\",\n    fechaEntrega: \"27/07/2022\"\n  }, {\n    numPedido: 14,\n    bastidor: 22,\n    matricula: \"4139HJX\",\n    modelo: \"Peugeot 307\",\n    fechaEntrega: \"27/06/2022\"\n  }, {\n    numPedido: 15,\n    bastidor: 23,\n    matricula: \"4139HJY\",\n    modelo: \"Volkswagen Golf\",\n    fechaEntrega: \"27/07/2022\"\n  }],\n  items: 0,\n  page: 0,\n  isLoading: false,\n  selectedVehiculo: null,\n  modalIsOpen: false\n};\n\nvar reducer = function reducer(state, incomingAction) {\n  if (state === undefined) {\n    return unloadedState;\n  }\n\n  var action = incomingAction;\n\n  switch (action.type) {\n    case 'REQUEST_VEHICULOS':\n      return __assign(__assign({}, state), {\n        isLoading: true\n      });\n\n    case 'RECEIVE_VEHICULOS':\n      // Only accept the incoming data if it matches the most recent request. This ensures we correctly\n      // handle out-of-order responses.\n      return __assign(__assign({}, state), {\n        vehiculos: action.vehiculos,\n        modalIsOpen: false,\n        isLoading: false,\n        page: 0,\n        selectedVehiculo: null\n      });\n\n    case 'SELECT_VEHICULOS':\n      return __assign(__assign({}, state), {\n        selectedVehiculo: action.selectedVehiculo,\n        modalIsOpen: true\n      });\n\n    case 'ADD_VEHICULOS':\n      return __assign(__assign({}, state), {\n        isLoading: true\n      });\n\n    case 'OPEN_EMPTY_MODAL':\n      return __assign(__assign({}, state), {\n        modalIsOpen: true\n      });\n\n    case 'CLOSE_MODAL':\n      return __assign(__assign({}, state), {\n        modalIsOpen: false,\n        selectedVehiculo: null\n      });\n\n    case 'CHANGE_ITEMS':\n      return __assign(__assign({}, state), {\n        items: action.numItems\n      });\n\n    case 'NEXT_PAGE':\n      return __assign(__assign({}, state), {\n        page: action.newPage\n      });\n\n    case 'PREVIOUS_PAGE':\n      return __assign(__assign({}, state), {\n        page: action.newPage\n      });\n\n    default:\n      return state;\n  }\n};\n\nexports.reducer = reducer;","map":{"version":3,"mappings":"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","names":["apiUrl","exports","requestVehiculos","page","items","dispatch","getState","appState","console","log","tablaVehiculos","fetch","method","headers","then","type","vehiculos","selectVehiculo","selectedVehiculo","addVehiculo","closeModal","openEmptyModal","changeItems","numItems","nextPage","newPage","previousPage","correctNewPage","numPedido","bastidor","matricula","modelo","fechaEntrega","isLoading","modalIsOpen","reducer","undefined","unloadedState","action","__assign"],"sources":["C:\\Users\\manue\\Downloads\\97b922f26a01\\Prueba\\AcercaTest\\Vehiculos_FRONT\\ClientApp\\src\\store\\TablaVehiculos.ts"],"sourcesContent":["ï»¿import { Action, Reducer } from 'redux';\r\nimport { AppThunkAction } from './';\r\nimport { routerActions } from 'connected-react-router';\r\nimport App from '../App';\r\nimport { parsePath } from 'history';\r\n\r\nconst apiUrl = \"http://localhost:42899/\";\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface TablaVehiculosState {\r\n    isLoading: boolean;\r\n    items: number;\r\n    page: number;\r\n    vehiculos: Vehiculo[];\r\n    selectedVehiculo: Vehiculo | null;\r\n    modalIsOpen: boolean;\r\n    \r\n}\r\n\r\n\r\nexport interface Vehiculo {\r\n    numPedido: number;\r\n    bastidor: number;\r\n    modelo: string;\r\n    matricula: string;\r\n    fechaEntrega: string;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n\r\ninterface RequestTablaVehiculosAction {\r\n    page: number;\r\n    items: number;\r\n    type: 'REQUEST_VEHICULOS';\r\n}\r\n\r\ninterface ReceiveTablaVehiculosAction {\r\n    type: 'RECEIVE_VEHICULOS';\r\n    vehiculos: Vehiculo[];\r\n}\r\n\r\ninterface SelectVehiculoTablaVehiculosAction {\r\n    type: 'SELECT_VEHICULOS';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\ninterface AddVehiculoTablaVehiculosAction {\r\n    type: 'ADD_VEHICULOS';\r\n    newVehiculo: Vehiculo | null | undefined;\r\n}\r\n\r\n\r\ninterface CloseModalTablaVehiculosAction {\r\n    type: 'CLOSE_MODAL';\r\n}\r\n\r\ninterface OpenEmptyModalTablaVehiculosAction {\r\n    type: 'OPEN_EMPTY_MODAL';\r\n}\r\n\r\ninterface ChangeItemsTablaVehiculosAction {\r\n    type: 'CHANGE_ITEMS';\r\n    numItems: number;\r\n}\r\ninterface NextPageTablaVehiculosAction {\r\n    type: 'NEXT_PAGE';\r\n    newPage: number;\r\n}\r\n\r\ninterface PreviousPageTablaVehiculosAction {\r\n    type: 'PREVIOUS_PAGE';\r\n    newPage: number;\r\n}\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\ntype KnownAction =\r\n    RequestTablaVehiculosAction |\r\n    ReceiveTablaVehiculosAction |\r\n    SelectVehiculoTablaVehiculosAction |\r\n    AddVehiculoTablaVehiculosAction |\r\n    CloseModalTablaVehiculosAction |\r\n    OpenEmptyModalTablaVehiculosAction |\r\n    ChangeItemsTablaVehiculosAction |\r\n    NextPageTablaVehiculosAction |\r\n    PreviousPageTablaVehiculosAction\r\n\r\n\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    requestVehiculos: (page: number, items: number): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        // Only load data if it's something we don't already have (and are not already loading)\r\n        const appState = getState();\r\n        console.log(\"Trying to get Vehiculos. Page: \" + page + \", Items: \" + items);\r\n        if (appState && appState.tablaVehiculos) {\r\n            fetch(apiUrl + 'api/Vehiculo/getVehiculos?Page=' + page + '&Items=' + items, {\r\n                method: 'GET',\r\n                referrerPolicy: \"no-referrer\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors'\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                     return dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: []  });\r\n        }\r\n    },\r\n\r\n    selectVehiculo: (v: Vehiculo): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'SELECT_VEHICULOS', selectedVehiculo: v });\r\n        }\r\n    },\r\n\r\n    addVehiculo: (v: Vehiculo): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            fetch(apiUrl + 'api/Vehiculo/addVehiculo', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors'\r\n                },\r\n                body: JSON.stringify(v)\r\n            })\r\n            .then(response => response.json() as Promise<Vehiculo[]>)\r\n            .then(data => {\r\n                return dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data });\r\n            });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [] });\r\n        }\r\n    },\r\n\r\n    closeModal: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'CLOSE_MODAL' });\r\n        }\r\n    },\r\n\r\n    openEmptyModal: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'OPEN_EMPTY_MODAL' });\r\n        }\r\n    },\r\n\r\n    changeItems: (newNumItems: number): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'CHANGE_ITEMS', numItems: newNumItems });\r\n        }\r\n    },\r\n\r\n\r\n    nextPage: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'NEXT_PAGE', newPage: appState.tablaVehiculos.page + 1 });\r\n        }\r\n    },\r\n\r\n    previousPage: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var correctNewPage = appState.tablaVehiculos.page - 1;\r\n            if (correctNewPage < 0) {\r\n                correctNewPage = 0;\r\n            }\r\n            dispatch({ type: 'PREVIOUS_PAGE', newPage: correctNewPage });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nconst unloadedState: TablaVehiculosState =\r\n{\r\n    vehiculos: [\r\n        { numPedido: 1, bastidor: 21, matricula: \"4139HJK\", modelo: \"Seat Ibiza\", fechaEntrega: \"27/05/2022\" },\r\n        { numPedido: 2, bastidor: 22, matricula: \"4139HJL\", modelo: \"Seat Tarraco\", fechaEntrega: \"27/06/2022\" },\r\n        { numPedido: 3, bastidor: 23, matricula: \"4139HJM\", modelo: \"Seat Marbella\", fechaEntrega: \"27/07/2022\" },\r\n        { numPedido: 4, bastidor: 22, matricula: \"4139HJN\", modelo: \"Fiat Multipla\", fechaEntrega: \"27/06/2022\" },\r\n        { numPedido: 5, bastidor: 23, matricula: \"4139HJO\", modelo: \"Nissan Patrol\", fechaEntrega: \"27/07/2022\" },\r\n        { numPedido: 6, bastidor: 22, matricula: \"4139HJP\", modelo: \"Opel Corsa\", fechaEntrega: \"27/06/2022\" },\r\n        { numPedido: 7, bastidor: 23, matricula: \"4139HJQ\", modelo: \"Opel Astra\", fechaEntrega: \"27/07/2022\" },\r\n        { numPedido: 8, bastidor: 22, matricula: \"4139HJR\", modelo: \"Seat LeÃ³n\", fechaEntrega: \"27/06/2022\" },\r\n        { numPedido: 9, bastidor: 23, matricula: \"4139HJS\", modelo: \"Dacia Sandero\", fechaEntrega: \"27/07/2022\" },\r\n        { numPedido: 10, bastidor: 22, matricula: \"4139HJT\", modelo: \"Audi TT\", fechaEntrega: \"27/06/2022\" },\r\n        { numPedido: 11, bastidor: 23, matricula: \"4139HJU\", modelo: \"Peugeot 206\", fechaEntrega: \"27/07/2022\" },\r\n        { numPedido: 12, bastidor: 22, matricula: \"4139HJV\", modelo: \"Peugeot 207\", fechaEntrega: \"27/06/2022\" },\r\n        { numPedido: 13, bastidor: 23, matricula: \"4139HJW\", modelo: \"Peugeot 208\", fechaEntrega: \"27/07/2022\" },\r\n        { numPedido: 14, bastidor: 22, matricula: \"4139HJX\", modelo: \"Peugeot 307\", fechaEntrega: \"27/06/2022\" },\r\n        { numPedido: 15, bastidor: 23, matricula: \"4139HJY\", modelo: \"Volkswagen Golf\", fechaEntrega: \"27/07/2022\" }\r\n    ], items: 0, page: 0, isLoading: false, selectedVehiculo: null, modalIsOpen: false\r\n};\r\n\r\nexport const reducer: Reducer<TablaVehiculosState> = (state: TablaVehiculosState | undefined, incomingAction: Action): TablaVehiculosState => {\r\n    if (state === undefined) {\r\n        return unloadedState;\r\n    }\r\n\r\n    const action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'REQUEST_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case 'RECEIVE_VEHICULOS':\r\n            // Only accept the incoming data if it matches the most recent request. This ensures we correctly\r\n            // handle out-of-order responses.\r\n            return {\r\n                ...state,\r\n                vehiculos: action.vehiculos,\r\n                modalIsOpen: false,\r\n                isLoading: false,\r\n                page: 0,\r\n                selectedVehiculo: null\r\n            };\r\n        case 'SELECT_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                selectedVehiculo: action.selectedVehiculo,\r\n                modalIsOpen: true\r\n            };\r\n        case 'ADD_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case 'OPEN_EMPTY_MODAL':\r\n            return {\r\n                ...state,\r\n                modalIsOpen: true\r\n            };\r\n\r\n        case 'CLOSE_MODAL':\r\n            return {\r\n                ...state,\r\n                modalIsOpen: false,\r\n                selectedVehiculo: null\r\n            };\r\n        case 'CHANGE_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: action.numItems\r\n            };\r\n        case 'NEXT_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.newPage\r\n            };\r\n\r\n        case 'PREVIOUS_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.newPage\r\n            };\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}