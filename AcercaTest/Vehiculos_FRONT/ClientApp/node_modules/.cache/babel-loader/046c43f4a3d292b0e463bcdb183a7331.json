{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.actionCreators = void 0;\nvar apiUrl = \"https://localhost:44364/\"; // ----------------\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\n\nexports.actionCreators = {\n  requestVehiculos: function requestVehiculos(page, items) {\n    return function (dispatch, getState) {\n      // Only load data if it's something we don't already have (and are not already loading)\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + page + '&Items=' + items, {\n          method: 'GET',\n          referrerPolicy: 'strict-origin-when-cross-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors',\n            'Origin': apiUrl\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  selectVehiculo: function selectVehiculo(v) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var newSelectedVehiculo = __assign({}, v);\n\n        dispatch({\n          type: 'SELECT_VEHICULOS',\n          selectedVehiculo: newSelectedVehiculo\n        });\n      }\n    };\n  },\n  addVehiculo: function addVehiculo() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var newVehiculo = {\n          numPedido: appState.tablaVehiculos.modalNumPedido == null ? 0 : appState.tablaVehiculos.modalNumPedido,\n          bastidor: appState.tablaVehiculos.modalBastidor == null ? \"\" : appState.tablaVehiculos.modalBastidor,\n          modelo: appState.tablaVehiculos.modalModelo == null ? \"\" : appState.tablaVehiculos.modalModelo,\n          matricula: appState.tablaVehiculos.modalMatricula == null ? \"\" : appState.tablaVehiculos.modalMatricula,\n          fechaEntrega: appState.tablaVehiculos.modalFechaEntrega == null ? \"\" : appState.tablaVehiculos.modalFechaEntrega\n        };\n        console.log(newVehiculo);\n        fetch(apiUrl + 'api/vehiculos/addVehiculo', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'mode': 'cors'\n          },\n          body: JSON.stringify(newVehiculo)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  editVehiculo: function editVehiculo() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var v = appState.tablaVehiculos.selectedVehiculo;\n        fetch(apiUrl + 'api/vehiculos/update', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'mode': 'cors'\n          },\n          body: JSON.stringify(v)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  closeModal: function closeModal() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'CLOSE_MODAL',\n          selectedVehiculo: null\n        });\n      }\n    };\n  },\n  openEmptyModal: function openEmptyModal() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'OPEN_EMPTY_MODAL'\n        });\n      }\n    };\n  },\n  changeItems: function changeItems(newNumItems) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + appState.tablaVehiculos.page + '&Items=' + newNumItems, {\n          method: 'GET',\n          referrerPolicy: 'strict-origin-when-cross-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors',\n            'Origin': apiUrl\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n          dispatch({\n            type: 'CHANGE_ITEMS',\n            numItems: newNumItems\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  nextPage: function nextPage() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var newPage = appState.tablaVehiculos.page + 1;\n        fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + newPage + '&Items=' + appState.tablaVehiculos.items, {\n          method: 'GET',\n          referrerPolicy: 'strict-origin-when-cross-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors',\n            'Origin': apiUrl\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n          dispatch({\n            type: 'NEXT_PAGE',\n            newPage: newPage\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  previousPage: function previousPage() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var correctNewPage = appState.tablaVehiculos.page - 1;\n\n        if (correctNewPage < 0) {\n          correctNewPage = 0;\n        }\n\n        fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + correctNewPage + '&Items=' + appState.tablaVehiculos.items, {\n          method: 'GET',\n          referrerPolicy: 'strict-origin-when-cross-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors',\n            'Origin': apiUrl\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n          dispatch({\n            type: 'PREVIOUS_PAGE',\n            newPage: correctNewPage\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  typeFechaEntrega: function typeFechaEntrega(d) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var currentSelectedVehiculo = appState.tablaVehiculos.selectedVehiculo;\n\n        if (currentSelectedVehiculo != null && currentSelectedVehiculo.fechaEntrega != undefined) {\n          currentSelectedVehiculo.fechaEntrega = d;\n        }\n\n        console.log(currentSelectedVehiculo);\n        dispatch({\n          type: 'TYPE_FECHA_ENTREGA',\n          selectedVehiculo: currentSelectedVehiculo\n        });\n      }\n    };\n  },\n  typeData: function typeData(data, dataType) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'TYPE_DATA_CREATE',\n          data: data,\n          dataType: dataType\n        });\n      }\n    };\n  },\n  editSelectedVehiculo: function editSelectedVehiculo(data, dataType) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var editedSelectedVehiculo = __assign({}, appState.tablaVehiculos.selectedVehiculo);\n\n        switch (dataType) {\n          case 'NumPedido':\n            editedSelectedVehiculo.numPedido = parseInt(data);\n            break;\n\n          case 'Bastidor':\n            editedSelectedVehiculo.bastidor = data;\n            break;\n\n          case 'Modelo':\n            editedSelectedVehiculo.modelo = data;\n            break;\n\n          case 'Matricula':\n            editedSelectedVehiculo.matricula = data;\n            break;\n\n          case 'FechaEntrega':\n            editedSelectedVehiculo.fechaEntrega = data;\n            break;\n        }\n\n        dispatch({\n          type: 'TYPE_DATA_EDIT',\n          selectedVehiculo: editedSelectedVehiculo\n        });\n      }\n    };\n  }\n}; // ----------------\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\n\nvar unloadedState = {\n  vehiculos: [{\n    numPedido: 1,\n    bastidor: \"21\",\n    matricula: \"4139HJK\",\n    modelo: \"Seat Ibiza\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 2,\n    bastidor: \"22\",\n    matricula: \"4139HJL\",\n    modelo: \"Seat Tarraco\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 3,\n    bastidor: \"23\",\n    matricula: \"4139HJM\",\n    modelo: \"Seat Marbella\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 4,\n    bastidor: \"22\",\n    matricula: \"4139HJN\",\n    modelo: \"Fiat Multipla\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 5,\n    bastidor: \"23\",\n    matricula: \"4139HJO\",\n    modelo: \"Nissan Patrol\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 6,\n    bastidor: \"22\",\n    matricula: \"4139HJP\",\n    modelo: \"Opel Corsa\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 7,\n    bastidor: \"23\",\n    matricula: \"4139HJQ\",\n    modelo: \"Opel Astra\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 8,\n    bastidor: \"22\",\n    matricula: \"4139HJR\",\n    modelo: \"Seat León\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 9,\n    bastidor: \"23\",\n    matricula: \"4139HJS\",\n    modelo: \"Dacia Sandero\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 10,\n    bastidor: \"22\",\n    matricula: \"4139HJT\",\n    modelo: \"Audi TT\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 11,\n    bastidor: \"23\",\n    matricula: \"4139HJU\",\n    modelo: \"Peugeot 206\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 12,\n    bastidor: \"22\",\n    matricula: \"4139HJV\",\n    modelo: \"Peugeot 207\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 13,\n    bastidor: \"23\",\n    matricula: \"4139HJW\",\n    modelo: \"Peugeot 208\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 14,\n    bastidor: \"22\",\n    matricula: \"4139HJX\",\n    modelo: \"Peugeot 307\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 15,\n    bastidor: \"23\",\n    matricula: \"4139HJY\",\n    modelo: \"Volkswagen Golf\",\n    fechaEntrega: \"2022-05-27\"\n  }],\n  items: 10,\n  page: 0,\n  isLoading: false,\n  selectedVehiculo: null,\n  modalIsOpen: false,\n  modalNumPedido: null,\n  modalBastidor: null,\n  modalModelo: null,\n  modalMatricula: null,\n  modalFechaEntrega: null,\n  loadedVehiculos: false\n};\n\nvar reducer = function reducer(state, incomingAction) {\n  if (state === undefined) {\n    return unloadedState;\n  }\n\n  var action = incomingAction;\n\n  switch (action.type) {\n    case 'REQUEST_VEHICULOS':\n      return __assign(__assign({}, state), {\n        isLoading: true\n      });\n\n    case 'RECEIVE_VEHICULOS':\n      // Only accept the incoming data if it matches the most recent request. This ensures we correctly\n      // handle out-of-order responses.\n      return __assign(__assign({}, state), {\n        vehiculos: action.vehiculos,\n        modalIsOpen: false,\n        isLoading: false,\n        page: 0,\n        selectedVehiculo: null,\n        loadedVehiculos: action.loadedVehiculos,\n        modalBastidor: null,\n        modalNumPedido: null,\n        modalMatricula: null,\n        modalModelo: null,\n        modalFechaEntrega: null\n      });\n\n    case 'SELECT_VEHICULOS':\n      return __assign(__assign({}, state), {\n        selectedVehiculo: action.selectedVehiculo,\n        modalIsOpen: true\n      });\n\n    case 'ADD_VEHICULOS':\n      return __assign(__assign({}, state), {\n        isLoading: true\n      });\n\n    case 'OPEN_EMPTY_MODAL':\n      return __assign(__assign({}, state), {\n        modalIsOpen: true,\n        selectedVehiculo: null\n      });\n\n    case 'CLOSE_MODAL':\n      return __assign(__assign({}, state), {\n        modalIsOpen: false,\n        selectedVehiculo: null,\n        modalBastidor: null,\n        modalFechaEntrega: null,\n        modalMatricula: null,\n        modalModelo: null,\n        modalNumPedido: null\n      });\n\n    case 'CHANGE_ITEMS':\n      return __assign(__assign({}, state), {\n        items: action.numItems\n      });\n\n    case 'NEXT_PAGE':\n      return __assign(__assign({}, state), {\n        page: action.newPage\n      });\n\n    case 'PREVIOUS_PAGE':\n      return __assign(__assign({}, state), {\n        page: action.newPage\n      });\n\n    case 'TYPE_FECHA_ENTREGA':\n      return __assign(__assign({}, state), {\n        selectedVehiculo: action.selectedVehiculo\n      });\n\n    case 'TYPE_DATA_CREATE':\n      switch (action.dataType) {\n        case 'NumPedido':\n          return __assign(__assign({}, state), {\n            modalNumPedido: parseInt(action.data)\n          });\n          break;\n\n        case 'Bastidor':\n          return __assign(__assign({}, state), {\n            modalBastidor: action.data\n          });\n          break;\n\n        case 'Modelo':\n          return __assign(__assign({}, state), {\n            modalModelo: action.data\n          });\n          break;\n\n        case 'Matricula':\n          return __assign(__assign({}, state), {\n            modalMatricula: action.data\n          });\n          break;\n\n        case 'FechaEntrega':\n          return __assign(__assign({}, state), {\n            modalFechaEntrega: action.data\n          });\n          break;\n      }\n\n      ;\n\n    case 'TYPE_DATA_EDIT':\n      return __assign(__assign({}, state), {\n        selectedVehiculo: action.selectedVehiculo\n      });\n\n    default:\n      return state;\n  }\n};\n\nexports.reducer = reducer;","map":{"version":3,"mappings":"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","names":["apiUrl","exports","requestVehiculos","page","items","appState","fetch","method","referrerPolicy","headers","then","data","dispatch","type","vehiculos","loadedVehiculos","v","getState","selectedVehiculo","newVehiculo","numPedido","bastidor","tablaVehiculos","modalBastidor","modelo","matricula","modalMatricula","fechaEntrega","modalFechaEntrega","console","body","response","newNumItems","json","numItems","newPage","correctNewPage","d","currentSelectedVehiculo","typeData","dataType","editSelectedVehiculo","editedSelectedVehiculo","parseInt"],"sources":["C:\\Users\\manue\\Downloads\\97b922f26a01\\Prueba\\AcercaTest\\Vehiculos_FRONT\\ClientApp\\src\\store\\TablaVehiculos.ts"],"sourcesContent":["﻿import { Action, Reducer } from 'redux';\r\nimport { AppThunkAction } from './';\r\nimport { routerActions } from 'connected-react-router';\r\nimport App from '../App';\r\nimport { parsePath } from 'history';\r\n\r\nconst apiUrl = \"https://localhost:44364/\";\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface TablaVehiculosState {\r\n    isLoading: boolean;\r\n    items: number;\r\n    page: number;\r\n    vehiculos: Vehiculo[];\r\n    selectedVehiculo: Vehiculo | null;\r\n    modalIsOpen: boolean;\r\n    modalNumPedido: number | null;\r\n    modalBastidor: string | null;\r\n    modalModelo: string | null;\r\n    modalMatricula: string | null;\r\n    modalFechaEntrega: string | null;\r\n    loadedVehiculos: boolean;\r\n\r\n}\r\n\r\n\r\nexport interface Vehiculo {\r\n    numPedido: number;\r\n    bastidor: string;\r\n    modelo: string;\r\n    matricula: string;\r\n    fechaEntrega: string | null;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n\r\ninterface RequestTablaVehiculosAction {\r\n    page: number;\r\n    items: number;\r\n    type: 'REQUEST_VEHICULOS';\r\n}\r\n\r\ninterface ReceiveTablaVehiculosAction {\r\n    type: 'RECEIVE_VEHICULOS';\r\n    vehiculos: Vehiculo[];\r\n    loadedVehiculos: boolean;\r\n}\r\n\r\ninterface SelectVehiculoTablaVehiculosAction {\r\n    type: 'SELECT_VEHICULOS';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\ninterface AddVehiculoTablaVehiculosAction {\r\n    type: 'ADD_VEHICULOS';\r\n    newVehiculo: Vehiculo | null | undefined;\r\n}\r\n\r\ninterface EditVehiculoTablaVehiculosAction {\r\n    type: 'EDIT_VEHICULO';\r\n    numPedido: number;\r\n    bastidor: string;\r\n    modelo: string;\r\n    matricula: string;\r\n    fechaEntrega: string | null;\r\n}\r\n\r\ninterface TypeNumPedidoTablaVehiculosAction {\r\n    type: 'TYPE_NUM_PEDIDO';\r\n    numPedido: number;\r\n}\r\ninterface TypeBastidorTablaVehiculosAction {\r\n    type: 'TYPE_BASTIDOR';\r\n    bastidor: string;\r\n}\r\ninterface TypeDataCreateTablaVehiculosAction {\r\n    type: 'TYPE_DATA_CREATE';\r\n    data: string;\r\n    dataType: string;\r\n}\r\ninterface TypeMatriculaTablaVehiculosAction {\r\n    type: 'TYPE_MATRICULA';\r\n    matricula: number;\r\n}\r\ninterface TypeFechaEntregaTablaVehiculosAction {\r\n    type: 'TYPE_FECHA_ENTREGA';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\ninterface CloseModalTablaVehiculosAction {\r\n    type: 'CLOSE_MODAL';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\ninterface OpenEmptyModalTablaVehiculosAction {\r\n    type: 'OPEN_EMPTY_MODAL';\r\n}\r\n\r\ninterface ChangeItemsTablaVehiculosAction {\r\n    type: 'CHANGE_ITEMS';\r\n    numItems: number;\r\n}\r\ninterface NextPageTablaVehiculosAction {\r\n    type: 'NEXT_PAGE';\r\n    newPage: number;\r\n}\r\n\r\ninterface PreviousPageTablaVehiculosAction {\r\n    type: 'PREVIOUS_PAGE';\r\n    newPage: number;\r\n}\r\n\r\n\r\ninterface TypeDataEditTablaVehiculosAction {\r\n    type: 'TYPE_DATA_EDIT';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\ntype KnownAction =\r\n    RequestTablaVehiculosAction |\r\n    ReceiveTablaVehiculosAction |\r\n    SelectVehiculoTablaVehiculosAction |\r\n    AddVehiculoTablaVehiculosAction |\r\n    CloseModalTablaVehiculosAction |\r\n    OpenEmptyModalTablaVehiculosAction |\r\n    ChangeItemsTablaVehiculosAction |\r\n    NextPageTablaVehiculosAction |\r\n    PreviousPageTablaVehiculosAction |\r\n    EditVehiculoTablaVehiculosAction |\r\n    TypeNumPedidoTablaVehiculosAction |\r\n    TypeBastidorTablaVehiculosAction |\r\n    TypeDataCreateTablaVehiculosAction |\r\n    TypeMatriculaTablaVehiculosAction |\r\n    TypeFechaEntregaTablaVehiculosAction |\r\n    TypeDataEditTablaVehiculosAction\r\n\r\n\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    requestVehiculos: (page: number, items: number): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        // Only load data if it's something we don't already have (and are not already loading)\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + page + '&Items=' + items, {\r\n                method: 'GET',\r\n                referrerPolicy: 'strict-origin-when-cross-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors',\r\n                    'Origin': apiUrl\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n    selectVehiculo: (v: Vehiculo): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var newSelectedVehiculo = { ...v };\r\n            dispatch({ type: 'SELECT_VEHICULOS', selectedVehiculo: newSelectedVehiculo });\r\n        }\r\n    },\r\n\r\n    addVehiculo: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var newVehiculo: Vehiculo;\r\n            newVehiculo = {\r\n                numPedido: appState.tablaVehiculos.modalNumPedido == null ? 0 : appState.tablaVehiculos.modalNumPedido,\r\n                bastidor: appState.tablaVehiculos.modalBastidor == null ? \"\" : appState.tablaVehiculos.modalBastidor,\r\n                modelo: appState.tablaVehiculos.modalModelo == null ? \"\" : appState.tablaVehiculos.modalModelo,\r\n                matricula: appState.tablaVehiculos.modalMatricula == null ? \"\" : appState.tablaVehiculos.modalMatricula,\r\n                fechaEntrega: appState.tablaVehiculos.modalFechaEntrega == null ? \"\" : appState.tablaVehiculos.modalFechaEntrega\r\n            };\r\n            console.log(newVehiculo);\r\n            fetch(apiUrl + 'api/vehiculos/addVehiculo', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'mode': 'cors'\r\n                },\r\n                body: JSON.stringify(newVehiculo)\r\n            })\r\n                .then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n    editVehiculo: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var v = appState.tablaVehiculos.selectedVehiculo;\r\n            fetch(apiUrl + 'api/vehiculos/update', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'mode': 'cors'\r\n                },\r\n                body: JSON.stringify(v)\r\n            })\r\n                .then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n    closeModal: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'CLOSE_MODAL', selectedVehiculo: null });\r\n        }\r\n    },\r\n\r\n    openEmptyModal: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'OPEN_EMPTY_MODAL' });\r\n        }\r\n    },\r\n\r\n    changeItems: (newNumItems: number): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + appState.tablaVehiculos.page + '&Items=' + newNumItems, {\r\n                method: 'GET',\r\n                referrerPolicy: 'strict-origin-when-cross-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors',\r\n                    'Origin': apiUrl\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n\r\n                    dispatch({ type: 'CHANGE_ITEMS', numItems: newNumItems });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n\r\n    },\r\n\r\n\r\n    nextPage: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var newPage = appState.tablaVehiculos.page + 1;\r\n            fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + newPage + '&Items=' + appState.tablaVehiculos.items, {\r\n                method: 'GET',\r\n                referrerPolicy: 'strict-origin-when-cross-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors',\r\n                    'Origin': apiUrl\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                    dispatch({ type: 'NEXT_PAGE', newPage: newPage });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n\r\n    },\r\n\r\n    previousPage: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var correctNewPage = appState.tablaVehiculos.page - 1;\r\n            if (correctNewPage < 0) {\r\n                correctNewPage = 0;\r\n            }\r\n\r\n            fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + correctNewPage + '&Items=' + appState.tablaVehiculos.items, {\r\n                method: 'GET',\r\n                referrerPolicy: 'strict-origin-when-cross-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors',\r\n                    'Origin': apiUrl\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                    dispatch({ type: 'PREVIOUS_PAGE', newPage: correctNewPage });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n    typeFechaEntrega: (d: string): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var currentSelectedVehiculo = appState.tablaVehiculos.selectedVehiculo;\r\n            if (currentSelectedVehiculo != null && currentSelectedVehiculo.fechaEntrega != undefined) {\r\n                currentSelectedVehiculo.fechaEntrega = d;\r\n            }\r\n            dispatch({ type: 'TYPE_FECHA_ENTREGA', selectedVehiculo: currentSelectedVehiculo });\r\n        }\r\n    },\r\n\r\n    typeData: (data: string, dataType: string): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'TYPE_DATA_CREATE', data: data, dataType: dataType });\r\n        }\r\n    },\r\n\r\n    editSelectedVehiculo: (data: string, dataType: string): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var editedSelectedVehiculo: Vehiculo | null;\r\n            editedSelectedVehiculo = { ...appState.tablaVehiculos.selectedVehiculo }\r\n            switch (dataType) {\r\n                case 'NumPedido':\r\n                    editedSelectedVehiculo.numPedido = parseInt(data);\r\n                    break;\r\n                case 'Bastidor':\r\n                    editedSelectedVehiculo.bastidor = data;\r\n                    break;\r\n                case 'Modelo':\r\n                    editedSelectedVehiculo.modelo = data;\r\n                    break;\r\n                case 'Matricula':\r\n                    editedSelectedVehiculo.matricula = data;\r\n                    break;\r\n                case 'FechaEntrega':\r\n                    editedSelectedVehiculo.fechaEntrega = data;\r\n                    break;\r\n            }\r\n            dispatch({ type: 'TYPE_DATA_EDIT', selectedVehiculo: editedSelectedVehiculo });\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nconst unloadedState: TablaVehiculosState =\r\n{\r\n    vehiculos: [\r\n        { numPedido: 1, bastidor: \"21\", matricula: \"4139HJK\", modelo: \"Seat Ibiza\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 2, bastidor: \"22\", matricula: \"4139HJL\", modelo: \"Seat Tarraco\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 3, bastidor: \"23\", matricula: \"4139HJM\", modelo: \"Seat Marbella\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 4, bastidor: \"22\", matricula: \"4139HJN\", modelo: \"Fiat Multipla\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 5, bastidor: \"23\", matricula: \"4139HJO\", modelo: \"Nissan Patrol\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 6, bastidor: \"22\", matricula: \"4139HJP\", modelo: \"Opel Corsa\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 7, bastidor: \"23\", matricula: \"4139HJQ\", modelo: \"Opel Astra\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 8, bastidor: \"22\", matricula: \"4139HJR\", modelo: \"Seat León\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 9, bastidor: \"23\", matricula: \"4139HJS\", modelo: \"Dacia Sandero\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 10, bastidor: \"22\", matricula: \"4139HJT\", modelo: \"Audi TT\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 11, bastidor: \"23\", matricula: \"4139HJU\", modelo: \"Peugeot 206\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 12, bastidor: \"22\", matricula: \"4139HJV\", modelo: \"Peugeot 207\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 13, bastidor: \"23\", matricula: \"4139HJW\", modelo: \"Peugeot 208\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 14, bastidor: \"22\", matricula: \"4139HJX\", modelo: \"Peugeot 307\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 15, bastidor: \"23\", matricula: \"4139HJY\", modelo: \"Volkswagen Golf\", fechaEntrega: \"2022-05-27\" }\r\n    ],\r\n    items: 10,\r\n    page: 0,\r\n    isLoading: false,\r\n    selectedVehiculo: null,\r\n    modalIsOpen: false,\r\n    modalNumPedido: null,\r\n    modalBastidor: null,\r\n    modalModelo: null,\r\n    modalMatricula: null,\r\n    modalFechaEntrega: null,\r\n    loadedVehiculos: false\r\n};\r\n\r\nexport const reducer: Reducer<TablaVehiculosState> = (state: TablaVehiculosState | undefined, incomingAction: Action): TablaVehiculosState => {\r\n    if (state === undefined) {\r\n        return unloadedState;\r\n    }\r\n\r\n    const action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'REQUEST_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case 'RECEIVE_VEHICULOS':\r\n            // Only accept the incoming data if it matches the most recent request. This ensures we correctly\r\n            // handle out-of-order responses.\r\n            return {\r\n                ...state,\r\n                vehiculos: action.vehiculos,\r\n                modalIsOpen: false,\r\n                isLoading: false,\r\n                page: 0,\r\n                selectedVehiculo: null,\r\n                loadedVehiculos: action.loadedVehiculos,\r\n                modalBastidor: null,\r\n                modalNumPedido: null,\r\n                modalMatricula: null,\r\n                modalModelo: null,\r\n                modalFechaEntrega: null\r\n            };\r\n        case 'SELECT_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                selectedVehiculo: action.selectedVehiculo,\r\n                modalIsOpen: true\r\n            };\r\n        case 'ADD_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case 'OPEN_EMPTY_MODAL':\r\n            return {\r\n                ...state,\r\n                modalIsOpen: true,\r\n                selectedVehiculo: null\r\n            };\r\n\r\n        case 'CLOSE_MODAL':\r\n            return {\r\n                ...state,\r\n                modalIsOpen: false,\r\n                selectedVehiculo: null,\r\n                modalBastidor: null,\r\n                modalFechaEntrega: null,\r\n                modalMatricula: null,\r\n                modalModelo: null,\r\n                modalNumPedido: null\r\n            };\r\n        case 'CHANGE_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: action.numItems\r\n            };\r\n        case 'NEXT_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.newPage\r\n            };\r\n\r\n        case 'PREVIOUS_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.newPage\r\n            };\r\n        case 'TYPE_FECHA_ENTREGA':\r\n            return {\r\n                ...state,\r\n                selectedVehiculo: action.selectedVehiculo\r\n            };\r\n        case 'TYPE_DATA_CREATE':\r\n            switch (action.dataType) {\r\n                case 'NumPedido':\r\n                    return {\r\n                        ...state,\r\n                        modalNumPedido: parseInt(action.data)\r\n                    }\r\n                case 'Bastidor':\r\n                    return {\r\n                        ...state,\r\n                        modalBastidor: action.data\r\n                    }\r\n                case 'Modelo':\r\n                    return {\r\n                        ...state,\r\n                        modalModelo: action.data\r\n                    }\r\n                case 'Matricula':\r\n                    return {\r\n                        ...state,\r\n                        modalMatricula: action.data\r\n                    }\r\n                case 'FechaEntrega':\r\n                    return {\r\n                        ...state,\r\n                        modalFechaEntrega: action.data\r\n                    }\r\n\r\n            };\r\n        case 'TYPE_DATA_EDIT':\r\n            return {\r\n                ...state,\r\n                selectedVehiculo: action.selectedVehiculo\r\n            };\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}