{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducers = void 0;\n\nvar WeatherForecasts = require(\"./WeatherForecasts\");\n\nvar Counter = require(\"./Counter\");\n\nvar TablaVehiculos = require(\"./TablaVehiculos\"); // Whenever an action is dispatched, Redux will update each top-level application state property using\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\n// acts on the corresponding ApplicationState property type.\n\n\nexports.reducers = {\n  counter: Counter.reducer,\n  weatherForecasts: WeatherForecasts.reducer,\n  tablaVehiculos: TablaVehiculos.reducer\n};","map":{"version":3,"mappings":";;;;;;;AAAA;;AAOA;;AACA,iD,CACA;AACa;;;;OAEX;0BAAA;4CAAA;;AAAA","names":[],"sources":["C:\\Users\\manue\\Downloads\\97b922f26a01\\Prueba\\AcercaTest\\Vehiculos_FRONT\\ClientApp\\src\\store\\index.ts"],"sourcesContent":["import * as TablaVehiculos from './TablaVehiculos';\r\n\r\n// The top-level state object\r\nexport interface ApplicationState {\r\n    tablaVehiculos: TablaVehiculos.TablaVehiculosState | undefined;\r\n}\r\n\r\n// Whenever an action is dispatched, Redux will update each top-level application state property using\r\n// the reducer with the matching name. It's important that the names match exactly, and that the reducer\r\n// acts on the corresponding ApplicationState property type.\r\nexport const reducers = {\r\n    tablaVehiculos: TablaVehiculos.reducer\r\n};\r\n\r\n// This type can be used as a hint on action creators so that its 'dispatch' and 'getState' params are\r\n// correctly typed to match your store.\r\nexport interface AppThunkAction<TAction> {\r\n    (dispatch: (action: TAction) => void, getState: () => ApplicationState): void;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}