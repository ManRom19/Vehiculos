{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.reducer = exports.actionCreators = void 0;\nvar apiUrl = \"https://localhost:44364/\"; // ----------------\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\n\nexports.actionCreators = {\n  requestVehiculos: function requestVehiculos(page, items) {\n    return function (dispatch, getState) {\n      // Only load data if it's something we don't already have (and are not already loading)\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + page + '&Items=' + items, {\n          method: 'GET',\n          referrerPolicy: 'strict-origin-when-cross-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors',\n            'Origin': apiUrl\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  selectVehiculo: function selectVehiculo(v) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var newSelectedVehiculo = __assign({}, v);\n\n        dispatch({\n          type: 'SELECT_VEHICULOS',\n          selectedVehiculo: newSelectedVehiculo\n        });\n      }\n    };\n  },\n  addVehiculo: function addVehiculo() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var newVehiculo;\n        newVehiculo = {\n          numPedido: appState.tablaVehiculos.modalNumPedido == null ? 0 : appState.tablaVehiculos.modalNumPedido,\n          bastidor: appState.tablaVehiculos.modalBastidor == null ? \"\" : appState.tablaVehiculos.modalBastidor,\n          modelo: appState.tablaVehiculos.modalModelo == null ? \"\" : appState.tablaVehiculos.modalModelo,\n          matricula: appState.tablaVehiculos.modalMatricula == null ? \"\" : appState.tablaVehiculos.modalMatricula,\n          fechaEntrega: appState.tablaVehiculos.modalFechaEntrega == null ? \"\" : appState.tablaVehiculos.modalFechaEntrega\n        };\n        console.log(newVehiculo);\n        fetch(apiUrl + 'api/vehiculos/addVehiculo', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'mode': 'cors'\n          },\n          body: JSON.stringify(newVehiculo)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  editVehiculo: function editVehiculo() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var v = appState.tablaVehiculos.selectedVehiculo;\n        fetch(apiUrl + 'api/vehiculos/update', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'mode': 'cors'\n          },\n          body: JSON.stringify(v)\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  closeModal: function closeModal() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'CLOSE_MODAL',\n          selectedVehiculo: null\n        });\n      }\n    };\n  },\n  openEmptyModal: function openEmptyModal() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'OPEN_EMPTY_MODAL'\n        });\n      }\n    };\n  },\n  changeItems: function changeItems(newNumItems) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + appState.tablaVehiculos.page + '&Items=' + newNumItems, {\n          method: 'GET',\n          referrerPolicy: 'strict-origin-when-cross-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors',\n            'Origin': apiUrl\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n          dispatch({\n            type: 'CHANGE_ITEMS',\n            numItems: newNumItems\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  nextPage: function nextPage() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var correctNewPage = appState.tablaVehiculos.page + 1;\n\n        if (appState.tablaVehiculos.items == 0) {\n          correctNewPage = 0;\n        }\n\n        fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + correctNewPage + '&Items=' + appState.tablaVehiculos.items, {\n          method: 'GET',\n          referrerPolicy: 'strict-origin-when-cross-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors',\n            'Origin': apiUrl\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n          dispatch({\n            type: 'NEXT_PAGE',\n            newPage: correctNewPage\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  previousPage: function previousPage() {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var correctNewPage = appState.tablaVehiculos.page - 1;\n\n        if (correctNewPage < 0) {\n          correctNewPage = 0;\n        }\n\n        fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + correctNewPage + '&Items=' + appState.tablaVehiculos.items, {\n          method: 'GET',\n          referrerPolicy: 'strict-origin-when-cross-origin',\n          headers: {\n            'Content-Type': 'application/json',\n            'mode': 'cors',\n            'Origin': apiUrl\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          dispatch({\n            type: 'RECEIVE_VEHICULOS',\n            vehiculos: data,\n            loadedVehiculos: true\n          });\n          dispatch({\n            type: 'PREVIOUS_PAGE',\n            newPage: correctNewPage\n          });\n        });\n        dispatch({\n          type: 'RECEIVE_VEHICULOS',\n          vehiculos: [],\n          loadedVehiculos: false\n        });\n      }\n    };\n  },\n  typeFechaEntrega: function typeFechaEntrega(d) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var currentSelectedVehiculo = appState.tablaVehiculos.selectedVehiculo;\n\n        if (currentSelectedVehiculo != null && currentSelectedVehiculo.fechaEntrega != undefined) {\n          currentSelectedVehiculo.fechaEntrega = d;\n        }\n\n        dispatch({\n          type: 'TYPE_FECHA_ENTREGA',\n          selectedVehiculo: currentSelectedVehiculo\n        });\n      }\n    };\n  },\n  typeData: function typeData(data, dataType) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        dispatch({\n          type: 'TYPE_DATA_CREATE',\n          data: data,\n          dataType: dataType\n        });\n      }\n    };\n  },\n  editSelectedVehiculo: function editSelectedVehiculo(data, dataType) {\n    return function (dispatch, getState) {\n      var appState = getState();\n\n      if (appState && appState.tablaVehiculos) {\n        var editedSelectedVehiculo = __assign({}, appState.tablaVehiculos.selectedVehiculo);\n\n        switch (dataType) {\n          case 'NumPedido':\n            editedSelectedVehiculo.numPedido = parseInt(data);\n            break;\n\n          case 'Bastidor':\n            editedSelectedVehiculo.bastidor = data;\n            break;\n\n          case 'Modelo':\n            editedSelectedVehiculo.modelo = data;\n            break;\n\n          case 'Matricula':\n            editedSelectedVehiculo.matricula = data;\n            break;\n\n          case 'FechaEntrega':\n            editedSelectedVehiculo.fechaEntrega = data;\n            break;\n        }\n\n        dispatch({\n          type: 'TYPE_DATA_EDIT',\n          selectedVehiculo: editedSelectedVehiculo\n        });\n      }\n    };\n  }\n}; // ----------------\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\n\nvar unloadedState = {\n  vehiculos: [{\n    numPedido: 1,\n    bastidor: \"21\",\n    matricula: \"4139HJK\",\n    modelo: \"Seat Ibiza\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 2,\n    bastidor: \"22\",\n    matricula: \"4139HJL\",\n    modelo: \"Seat Tarraco\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 3,\n    bastidor: \"23\",\n    matricula: \"4139HJM\",\n    modelo: \"Seat Marbella\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 4,\n    bastidor: \"22\",\n    matricula: \"4139HJN\",\n    modelo: \"Fiat Multipla\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 5,\n    bastidor: \"23\",\n    matricula: \"4139HJO\",\n    modelo: \"Nissan Patrol\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 6,\n    bastidor: \"22\",\n    matricula: \"4139HJP\",\n    modelo: \"Opel Corsa\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 7,\n    bastidor: \"23\",\n    matricula: \"4139HJQ\",\n    modelo: \"Opel Astra\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 8,\n    bastidor: \"22\",\n    matricula: \"4139HJR\",\n    modelo: \"Seat León\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 9,\n    bastidor: \"23\",\n    matricula: \"4139HJS\",\n    modelo: \"Dacia Sandero\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 10,\n    bastidor: \"22\",\n    matricula: \"4139HJT\",\n    modelo: \"Audi TT\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 11,\n    bastidor: \"23\",\n    matricula: \"4139HJU\",\n    modelo: \"Peugeot 206\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 12,\n    bastidor: \"22\",\n    matricula: \"4139HJV\",\n    modelo: \"Peugeot 207\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 13,\n    bastidor: \"23\",\n    matricula: \"4139HJW\",\n    modelo: \"Peugeot 208\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 14,\n    bastidor: \"22\",\n    matricula: \"4139HJX\",\n    modelo: \"Peugeot 307\",\n    fechaEntrega: \"2022-05-27\"\n  }, {\n    numPedido: 15,\n    bastidor: \"23\",\n    matricula: \"4139HJY\",\n    modelo: \"Volkswagen Golf\",\n    fechaEntrega: \"2022-05-27\"\n  }],\n  items: 10,\n  page: 0,\n  isLoading: false,\n  selectedVehiculo: null,\n  modalIsOpen: false,\n  modalNumPedido: null,\n  modalBastidor: null,\n  modalModelo: null,\n  modalMatricula: null,\n  modalFechaEntrega: null,\n  loadedVehiculos: false\n};\n\nvar reducer = function reducer(state, incomingAction) {\n  if (state === undefined) {\n    return unloadedState;\n  }\n\n  var action = incomingAction;\n\n  switch (action.type) {\n    case 'REQUEST_VEHICULOS':\n      return __assign(__assign({}, state), {\n        isLoading: true\n      });\n\n    case 'RECEIVE_VEHICULOS':\n      // Only accept the incoming data if it matches the most recent request. This ensures we correctly\n      // handle out-of-order responses.\n      return __assign(__assign({}, state), {\n        vehiculos: action.vehiculos,\n        modalIsOpen: false,\n        isLoading: false,\n        page: 0,\n        selectedVehiculo: null,\n        loadedVehiculos: action.loadedVehiculos,\n        modalBastidor: null,\n        modalNumPedido: null,\n        modalMatricula: null,\n        modalModelo: null,\n        modalFechaEntrega: null\n      });\n\n    case 'SELECT_VEHICULOS':\n      return __assign(__assign({}, state), {\n        selectedVehiculo: action.selectedVehiculo,\n        modalIsOpen: true\n      });\n\n    case 'ADD_VEHICULOS':\n      return __assign(__assign({}, state), {\n        isLoading: true\n      });\n\n    case 'OPEN_EMPTY_MODAL':\n      return __assign(__assign({}, state), {\n        modalIsOpen: true,\n        selectedVehiculo: null\n      });\n\n    case 'CLOSE_MODAL':\n      return __assign(__assign({}, state), {\n        modalIsOpen: false,\n        selectedVehiculo: null,\n        modalBastidor: null,\n        modalFechaEntrega: null,\n        modalMatricula: null,\n        modalModelo: null,\n        modalNumPedido: null\n      });\n\n    case 'CHANGE_ITEMS':\n      return __assign(__assign({}, state), {\n        items: action.numItems\n      });\n\n    case 'NEXT_PAGE':\n      return __assign(__assign({}, state), {\n        page: action.newPage\n      });\n\n    case 'PREVIOUS_PAGE':\n      return __assign(__assign({}, state), {\n        page: action.newPage\n      });\n\n    case 'TYPE_FECHA_ENTREGA':\n      return __assign(__assign({}, state), {\n        selectedVehiculo: action.selectedVehiculo\n      });\n\n    case 'TYPE_DATA_CREATE':\n      switch (action.dataType) {\n        case 'NumPedido':\n          return __assign(__assign({}, state), {\n            modalNumPedido: parseInt(action.data)\n          });\n\n        case 'Bastidor':\n          return __assign(__assign({}, state), {\n            modalBastidor: action.data\n          });\n\n        case 'Modelo':\n          return __assign(__assign({}, state), {\n            modalModelo: action.data\n          });\n\n        case 'Matricula':\n          return __assign(__assign({}, state), {\n            modalMatricula: action.data\n          });\n\n        case 'FechaEntrega':\n          return __assign(__assign({}, state), {\n            modalFechaEntrega: action.data\n          });\n\n        default:\n          return state;\n      }\n\n      ;\n\n    case 'TYPE_DATA_EDIT':\n      return __assign(__assign({}, state), {\n        selectedVehiculo: action.selectedVehiculo\n      });\n\n    default:\n      return state;\n  }\n};\n\nexports.reducer = reducer;","map":{"version":3,"mappings":"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","names":["apiUrl","exports","requestVehiculos","page","items","dispatch","getState","appState","tablaVehiculos","fetch","method","referrerPolicy","headers","then","json","type","vehiculos","data","loadedVehiculos","selectVehiculo","v","newSelectedVehiculo","selectedVehiculo","addVehiculo","newVehiculo","numPedido","modalNumPedido","bastidor","modalBastidor","modelo","modalModelo","matricula","modalMatricula","fechaEntrega","modalFechaEntrega","console","log","body","JSON","stringify","editVehiculo","closeModal","openEmptyModal","changeItems","newNumItems","numItems","nextPage","correctNewPage","newPage","previousPage","typeFechaEntrega","d","currentSelectedVehiculo","undefined","typeData","dataType","editSelectedVehiculo","editedSelectedVehiculo","parseInt","unloadedState","isLoading","modalIsOpen","reducer","state","incomingAction","action"],"sources":["C:\\Users\\manue\\Downloads\\97b922f26a01\\Prueba\\AcercaTest\\Vehiculos_FRONT\\ClientApp\\src\\store\\TablaVehiculos.ts"],"sourcesContent":["﻿import { Action, Reducer } from 'redux';\r\nimport { AppThunkAction } from './';\r\nimport { routerActions } from 'connected-react-router';\r\nimport App from '../App';\r\nimport { parsePath } from 'history';\r\n\r\nconst apiUrl = \"https://localhost:44364/\";\r\n\r\n// -----------------\r\n// STATE - This defines the type of data maintained in the Redux store.\r\n\r\nexport interface TablaVehiculosState {\r\n    isLoading: boolean;\r\n    items: number;\r\n    page: number;\r\n    vehiculos: Vehiculo[];\r\n    selectedVehiculo: Vehiculo | null;\r\n    modalIsOpen: boolean;\r\n    modalNumPedido: number | null;\r\n    modalBastidor: string | null;\r\n    modalModelo: string | null;\r\n    modalMatricula: string | null;\r\n    modalFechaEntrega: string | null;\r\n    loadedVehiculos: boolean;\r\n\r\n}\r\n\r\n\r\nexport interface Vehiculo {\r\n    numPedido: number;\r\n    bastidor: string;\r\n    modelo: string;\r\n    matricula: string;\r\n    fechaEntrega: string | null;\r\n}\r\n\r\n// -----------------\r\n// ACTIONS - These are serializable (hence replayable) descriptions of state transitions.\r\n// They do not themselves have any side-effects; they just describe something that is going to happen.\r\n\r\ninterface RequestTablaVehiculosAction {\r\n    page: number;\r\n    items: number;\r\n    type: 'REQUEST_VEHICULOS';\r\n}\r\n\r\ninterface ReceiveTablaVehiculosAction {\r\n    type: 'RECEIVE_VEHICULOS';\r\n    vehiculos: Vehiculo[];\r\n    loadedVehiculos: boolean;\r\n}\r\n\r\ninterface SelectVehiculoTablaVehiculosAction {\r\n    type: 'SELECT_VEHICULOS';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\ninterface AddVehiculoTablaVehiculosAction {\r\n    type: 'ADD_VEHICULOS';\r\n    newVehiculo: Vehiculo | null | undefined;\r\n}\r\n\r\ninterface EditVehiculoTablaVehiculosAction {\r\n    type: 'EDIT_VEHICULO';\r\n    numPedido: number;\r\n    bastidor: string;\r\n    modelo: string;\r\n    matricula: string;\r\n    fechaEntrega: string | null;\r\n}\r\n\r\ninterface TypeNumPedidoTablaVehiculosAction {\r\n    type: 'TYPE_NUM_PEDIDO';\r\n    numPedido: number;\r\n}\r\ninterface TypeBastidorTablaVehiculosAction {\r\n    type: 'TYPE_BASTIDOR';\r\n    bastidor: string;\r\n}\r\ninterface TypeDataCreateTablaVehiculosAction {\r\n    type: 'TYPE_DATA_CREATE';\r\n    data: string;\r\n    dataType: string;\r\n}\r\ninterface TypeMatriculaTablaVehiculosAction {\r\n    type: 'TYPE_MATRICULA';\r\n    matricula: number;\r\n}\r\ninterface TypeFechaEntregaTablaVehiculosAction {\r\n    type: 'TYPE_FECHA_ENTREGA';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\ninterface CloseModalTablaVehiculosAction {\r\n    type: 'CLOSE_MODAL';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\ninterface OpenEmptyModalTablaVehiculosAction {\r\n    type: 'OPEN_EMPTY_MODAL';\r\n}\r\n\r\ninterface ChangeItemsTablaVehiculosAction {\r\n    type: 'CHANGE_ITEMS';\r\n    numItems: number;\r\n}\r\ninterface NextPageTablaVehiculosAction {\r\n    type: 'NEXT_PAGE';\r\n    newPage: number;\r\n}\r\n\r\ninterface PreviousPageTablaVehiculosAction {\r\n    type: 'PREVIOUS_PAGE';\r\n    newPage: number;\r\n}\r\n\r\n\r\ninterface TypeDataEditTablaVehiculosAction {\r\n    type: 'TYPE_DATA_EDIT';\r\n    selectedVehiculo: Vehiculo | null;\r\n}\r\n\r\n\r\n// Declare a 'discriminated union' type. This guarantees that all references to 'type' properties contain one of the\r\n// declared type strings (and not any other arbitrary string).\r\ntype KnownAction =\r\n    RequestTablaVehiculosAction |\r\n    ReceiveTablaVehiculosAction |\r\n    SelectVehiculoTablaVehiculosAction |\r\n    AddVehiculoTablaVehiculosAction |\r\n    CloseModalTablaVehiculosAction |\r\n    OpenEmptyModalTablaVehiculosAction |\r\n    ChangeItemsTablaVehiculosAction |\r\n    NextPageTablaVehiculosAction |\r\n    PreviousPageTablaVehiculosAction |\r\n    EditVehiculoTablaVehiculosAction |\r\n    TypeNumPedidoTablaVehiculosAction |\r\n    TypeBastidorTablaVehiculosAction |\r\n    TypeDataCreateTablaVehiculosAction |\r\n    TypeMatriculaTablaVehiculosAction |\r\n    TypeFechaEntregaTablaVehiculosAction |\r\n    TypeDataEditTablaVehiculosAction\r\n\r\n\r\n\r\n// ----------------\r\n// ACTION CREATORS - These are functions exposed to UI components that will trigger a state transition.\r\n// They don't directly mutate state, but they can have external side-effects (such as loading data).\r\n\r\nexport const actionCreators = {\r\n    requestVehiculos: (page: number, items: number): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        // Only load data if it's something we don't already have (and are not already loading)\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + page + '&Items=' + items, {\r\n                method: 'GET',\r\n                referrerPolicy: 'strict-origin-when-cross-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors',\r\n                    'Origin': apiUrl\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n    selectVehiculo: (v: Vehiculo): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var newSelectedVehiculo = { ...v };\r\n            dispatch({ type: 'SELECT_VEHICULOS', selectedVehiculo: newSelectedVehiculo });\r\n        }\r\n    },\r\n\r\n    addVehiculo: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var newVehiculo: Vehiculo;\r\n            newVehiculo = {\r\n                numPedido: appState.tablaVehiculos.modalNumPedido == null ? 0 : appState.tablaVehiculos.modalNumPedido,\r\n                bastidor: appState.tablaVehiculos.modalBastidor == null ? \"\" : appState.tablaVehiculos.modalBastidor,\r\n                modelo: appState.tablaVehiculos.modalModelo == null ? \"\" : appState.tablaVehiculos.modalModelo,\r\n                matricula: appState.tablaVehiculos.modalMatricula == null ? \"\" : appState.tablaVehiculos.modalMatricula,\r\n                fechaEntrega: appState.tablaVehiculos.modalFechaEntrega == null ? \"\" : appState.tablaVehiculos.modalFechaEntrega\r\n            };\r\n            console.log(newVehiculo);\r\n            fetch(apiUrl + 'api/vehiculos/addVehiculo', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'mode': 'cors'\r\n                },\r\n                body: JSON.stringify(newVehiculo)\r\n            })\r\n                .then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n    editVehiculo: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var v = appState.tablaVehiculos.selectedVehiculo;\r\n            fetch(apiUrl + 'api/vehiculos/update', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'mode': 'cors'\r\n                },\r\n                body: JSON.stringify(v)\r\n            })\r\n                .then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n    deleteVehiculo: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var v = appState.tablaVehiculos.selectedVehiculo;\r\n            fetch(apiUrl + 'api/vehiculos/delete', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json',\r\n                    'mode': 'cors'\r\n                },\r\n                body: JSON.stringify(v)\r\n            })\r\n                .then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n\r\n    closeModal: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'CLOSE_MODAL', selectedVehiculo: null });\r\n        }\r\n    },\r\n\r\n    openEmptyModal: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'OPEN_EMPTY_MODAL' });\r\n        }\r\n    },\r\n\r\n    changeItems: (newNumItems: number): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + appState.tablaVehiculos.page + '&Items=' + newNumItems, {\r\n                method: 'GET',\r\n                referrerPolicy: 'strict-origin-when-cross-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors',\r\n                    'Origin': apiUrl\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n\r\n                    dispatch({ type: 'CHANGE_ITEMS', numItems: newNumItems });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n\r\n    },\r\n\r\n\r\n    nextPage: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n\r\n            var correctNewPage = appState.tablaVehiculos.page + 1;\r\n            if (appState.tablaVehiculos.items == 0) {\r\n                correctNewPage = 0;\r\n            }\r\n            fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + correctNewPage + '&Items=' + appState.tablaVehiculos.items, {\r\n                method: 'GET',\r\n                referrerPolicy: 'strict-origin-when-cross-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors',\r\n                    'Origin': apiUrl\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                    dispatch({ type: 'NEXT_PAGE', newPage: correctNewPage });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n\r\n    },\r\n\r\n    previousPage: (): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var correctNewPage = appState.tablaVehiculos.page - 1;\r\n            if (correctNewPage < 0) {\r\n                correctNewPage = 0;\r\n            }\r\n\r\n            fetch(apiUrl + 'api/vehiculos/getVehiculos?Page=' + correctNewPage + '&Items=' + appState.tablaVehiculos.items, {\r\n                method: 'GET',\r\n                referrerPolicy: 'strict-origin-when-cross-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'mode': 'cors',\r\n                    'Origin': apiUrl\r\n                }\r\n            }).then(response => response.json() as Promise<Vehiculo[]>)\r\n                .then(data => {\r\n                    dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: data, loadedVehiculos: true });\r\n                    dispatch({ type: 'PREVIOUS_PAGE', newPage: correctNewPage });\r\n                });\r\n\r\n            dispatch({ type: 'RECEIVE_VEHICULOS', vehiculos: [], loadedVehiculos: false });\r\n        }\r\n    },\r\n\r\n    typeFechaEntrega: (d: string): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var currentSelectedVehiculo = appState.tablaVehiculos.selectedVehiculo;\r\n            if (currentSelectedVehiculo != null && currentSelectedVehiculo.fechaEntrega != undefined) {\r\n                currentSelectedVehiculo.fechaEntrega = d;\r\n            }\r\n            dispatch({ type: 'TYPE_FECHA_ENTREGA', selectedVehiculo: currentSelectedVehiculo });\r\n        }\r\n    },\r\n\r\n    typeData: (data: string, dataType: string): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            dispatch({ type: 'TYPE_DATA_CREATE', data: data, dataType: dataType });\r\n        }\r\n    },\r\n\r\n    editSelectedVehiculo: (data: string, dataType: string): AppThunkAction<KnownAction> => (dispatch, getState) => {\r\n        const appState = getState();\r\n        if (appState && appState.tablaVehiculos) {\r\n            var editedSelectedVehiculo = { ...appState.tablaVehiculos.selectedVehiculo };\r\n            switch (dataType) {\r\n                case 'NumPedido':\r\n                    editedSelectedVehiculo.numPedido = parseInt(data);\r\n                    break;\r\n                case 'Bastidor':\r\n                    editedSelectedVehiculo.bastidor = data;\r\n                    break;\r\n                case 'Modelo':\r\n                    editedSelectedVehiculo.modelo = data;\r\n                    break;\r\n                case 'Matricula':\r\n                    editedSelectedVehiculo.matricula = data;\r\n                    break;\r\n                case 'FechaEntrega':\r\n                    editedSelectedVehiculo.fechaEntrega = data;\r\n                    break;\r\n            }\r\n            dispatch({ type: 'TYPE_DATA_EDIT', selectedVehiculo: editedSelectedVehiculo });\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\n// ----------------\r\n// REDUCER - For a given state and action, returns the new state. To support time travel, this must not mutate the old state.\r\n\r\nconst unloadedState: TablaVehiculosState =\r\n{\r\n    vehiculos: [\r\n        { numPedido: 1, bastidor: \"21\", matricula: \"4139HJK\", modelo: \"Seat Ibiza\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 2, bastidor: \"22\", matricula: \"4139HJL\", modelo: \"Seat Tarraco\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 3, bastidor: \"23\", matricula: \"4139HJM\", modelo: \"Seat Marbella\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 4, bastidor: \"22\", matricula: \"4139HJN\", modelo: \"Fiat Multipla\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 5, bastidor: \"23\", matricula: \"4139HJO\", modelo: \"Nissan Patrol\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 6, bastidor: \"22\", matricula: \"4139HJP\", modelo: \"Opel Corsa\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 7, bastidor: \"23\", matricula: \"4139HJQ\", modelo: \"Opel Astra\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 8, bastidor: \"22\", matricula: \"4139HJR\", modelo: \"Seat León\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 9, bastidor: \"23\", matricula: \"4139HJS\", modelo: \"Dacia Sandero\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 10, bastidor: \"22\", matricula: \"4139HJT\", modelo: \"Audi TT\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 11, bastidor: \"23\", matricula: \"4139HJU\", modelo: \"Peugeot 206\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 12, bastidor: \"22\", matricula: \"4139HJV\", modelo: \"Peugeot 207\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 13, bastidor: \"23\", matricula: \"4139HJW\", modelo: \"Peugeot 208\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 14, bastidor: \"22\", matricula: \"4139HJX\", modelo: \"Peugeot 307\", fechaEntrega: \"2022-05-27\" },\r\n        { numPedido: 15, bastidor: \"23\", matricula: \"4139HJY\", modelo: \"Volkswagen Golf\", fechaEntrega: \"2022-05-27\" }\r\n    ],\r\n    items: 10,\r\n    page: 0,\r\n    isLoading: false,\r\n    selectedVehiculo: null,\r\n    modalIsOpen: false,\r\n    modalNumPedido: null,\r\n    modalBastidor: null,\r\n    modalModelo: null,\r\n    modalMatricula: null,\r\n    modalFechaEntrega: null,\r\n    loadedVehiculos: false\r\n};\r\n\r\nexport const reducer: Reducer<TablaVehiculosState> = (state: TablaVehiculosState | undefined, incomingAction: Action): TablaVehiculosState => {\r\n    if (state === undefined) {\r\n        return unloadedState;\r\n    }\r\n\r\n    const action = incomingAction as KnownAction;\r\n    switch (action.type) {\r\n        case 'REQUEST_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case 'RECEIVE_VEHICULOS':\r\n            // Only accept the incoming data if it matches the most recent request. This ensures we correctly\r\n            // handle out-of-order responses.\r\n            return {\r\n                ...state,\r\n                vehiculos: action.vehiculos,\r\n                modalIsOpen: false,\r\n                isLoading: false,\r\n                page: 0,\r\n                selectedVehiculo: null,\r\n                loadedVehiculos: action.loadedVehiculos,\r\n                modalBastidor: null,\r\n                modalNumPedido: null,\r\n                modalMatricula: null,\r\n                modalModelo: null,\r\n                modalFechaEntrega: null\r\n            };\r\n        case 'SELECT_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                selectedVehiculo: action.selectedVehiculo,\r\n                modalIsOpen: true\r\n            };\r\n        case 'ADD_VEHICULOS':\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        case 'OPEN_EMPTY_MODAL':\r\n            return {\r\n                ...state,\r\n                modalIsOpen: true,\r\n                selectedVehiculo: null\r\n            };\r\n\r\n        case 'CLOSE_MODAL':\r\n            return {\r\n                ...state,\r\n                modalIsOpen: false,\r\n                selectedVehiculo: null,\r\n                modalBastidor: null,\r\n                modalFechaEntrega: null,\r\n                modalMatricula: null,\r\n                modalModelo: null,\r\n                modalNumPedido: null\r\n            };\r\n        case 'CHANGE_ITEMS':\r\n            return {\r\n                ...state,\r\n                items: action.numItems\r\n            };\r\n        case 'NEXT_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.newPage\r\n            };\r\n\r\n        case 'PREVIOUS_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.newPage\r\n            };\r\n        case 'TYPE_FECHA_ENTREGA':\r\n            return {\r\n                ...state,\r\n                selectedVehiculo: action.selectedVehiculo\r\n            };\r\n        case 'TYPE_DATA_CREATE':\r\n            switch (action.dataType) {\r\n                case 'NumPedido':\r\n                    return {\r\n                        ...state,\r\n                        modalNumPedido: parseInt(action.data)\r\n                    }\r\n                case 'Bastidor':\r\n                    return {\r\n                        ...state,\r\n                        modalBastidor: action.data\r\n                    }\r\n                case 'Modelo':\r\n                    return {\r\n                        ...state,\r\n                        modalModelo: action.data\r\n                    }\r\n                case 'Matricula':\r\n                    return {\r\n                        ...state,\r\n                        modalMatricula: action.data\r\n                    }\r\n                case 'FechaEntrega':\r\n                    return {\r\n                        ...state,\r\n                        modalFechaEntrega: action.data\r\n                    }\r\n                default:\r\n                    return state;\r\n\r\n            };\r\n        case 'TYPE_DATA_EDIT':\r\n            return {\r\n                ...state,\r\n                selectedVehiculo: action.selectedVehiculo\r\n            };\r\n\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}