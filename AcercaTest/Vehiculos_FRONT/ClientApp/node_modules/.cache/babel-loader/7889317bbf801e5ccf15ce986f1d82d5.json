{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_redux_1 = require(\"react-redux\");\n\nvar react_router_dom_1 = require(\"react-router-dom\");\n\nvar WeatherForecastsStore = require(\"../store/WeatherForecasts\");\n\nvar FetchData =\n/** @class */\nfunction (_super) {\n  __extends(FetchData, _super);\n\n  function FetchData() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // This method is called when the component is first added to the document\n\n\n  FetchData.prototype.componentDidMount = function () {\n    this.ensureDataFetched();\n  }; // This method is called when the route parameters change\n\n\n  FetchData.prototype.componentDidUpdate = function () {\n    this.ensureDataFetched();\n  };\n\n  FetchData.prototype.render = function () {\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      id: \"tabelLabel\"\n    }, \"Weather forecast\"), React.createElement(\"p\", null, \"This component demonstrates fetching data from the server and working with URL parameters.\"), this.renderForecastsTable(), this.renderPagination());\n  };\n\n  FetchData.prototype.ensureDataFetched = function () {\n    var startDateIndex = parseInt(this.props.match.params.startDateIndex, 10) || 0;\n    this.props.requestWeatherForecasts(startDateIndex);\n  };\n\n  FetchData.prototype.renderForecastsTable = function () {\n    return React.createElement(\"table\", {\n      className: 'table table-striped',\n      \"aria-labelledby\": \"tabelLabel\"\n    }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null, \"Date\"), React.createElement(\"th\", null, \"Temp. (C)\"), React.createElement(\"th\", null, \"Temp. (F)\"), React.createElement(\"th\", null, \"Summary\"))), React.createElement(\"tbody\", null, this.props.forecasts.map(function (forecast) {\n      return React.createElement(\"tr\", {\n        key: forecast.date\n      }, React.createElement(\"td\", null, forecast.date), React.createElement(\"td\", null, forecast.temperatureC), React.createElement(\"td\", null, forecast.temperatureF), React.createElement(\"td\", null, forecast.summary));\n    })));\n  };\n\n  FetchData.prototype.renderPagination = function () {\n    var prevStartDateIndex = (this.props.startDateIndex || 0) - 5;\n    var nextStartDateIndex = (this.props.startDateIndex || 0) + 5;\n    return React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\"\n    }, React.createElement(react_router_dom_1.Link, {\n      className: 'btn btn-outline-secondary btn-sm',\n      to: \"/fetch-data/\" + prevStartDateIndex\n    }, \"Previous\"), this.props.isLoading && React.createElement(\"span\", null, \"Loading...\"), React.createElement(react_router_dom_1.Link, {\n      className: 'btn btn-outline-secondary btn-sm',\n      to: \"/fetch-data/\" + nextStartDateIndex\n    }, \"Next\"));\n  };\n\n  return FetchData;\n}(React.PureComponent);\n\nexports.default = react_redux_1.connect(function (state) {\n  return state.weatherForecasts;\n}, // Selects which state properties are merged into the component's props\nWeatherForecastsStore.actionCreators // Selects which action creators are merged into the component's props\n)(FetchData);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AASA;AAAA;AAAA;EAAwBA;;EAAxB;;EAgEC,CAhED,CACE;;;EACOC,wCAAP;IACE,KAAKC,iBAAL;EACD,CAFM,CAFT,CAME;;;EACOD,yCAAP;IACE,KAAKC,iBAAL;EACD,CAFM;;EAIAD,6BAAP;IACE,OACEE,oBAACA,KAAK,CAACC,QAAP,EAAe,IAAf,EACED;MAAIE,EAAE,EAAC;IAAP,GAAmB,kBAAnB,CADF,EAEEF,4HAFF,EAGG,KAAKG,oBAAL,EAHH,EAIG,KAAKC,gBAAL,EAJH,CADF;EAQD,CATM;;EAWCN,wCAAR;IACE,IAAMO,cAAc,GAAGC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBJ,cAAzB,EAAyC,EAAzC,CAAR,IAAwD,CAA/E;IACA,KAAKE,KAAL,CAAWG,uBAAX,CAAmCL,cAAnC;EACD,CAHO;;EAKAP,2CAAR;IACE,OACEE;MAAOW,SAAS,EAAC,qBAAjB;MAAsC,mBAAiB;IAAvD,GACEX,mCACEA,gCACEA,uCADF,EAEEA,4CAFF,EAGEA,4CAHF,EAIEA,0CAJF,CADF,CADF,EASEA,mCACG,KAAKO,KAAL,CAAWK,SAAX,CAAqBC,GAArB,CAAyB,UAACC,QAAD,EAAgD;MACxE;QAAIC,GAAG,EAAED,QAAQ,CAACE;MAAlB,GACEhB,gCAAKc,QAAQ,CAACE,IAAd,CADF,EAEEhB,gCAAKc,QAAQ,CAACG,YAAd,CAFF,EAGEjB,gCAAKc,QAAQ,CAACI,YAAd,CAHF,EAIElB,gCAAKc,QAAQ,CAACK,OAAd,CAJF;IAKK,CANN,CADH,CATF,CADF;EAsBD,CAvBO;;EAyBArB,uCAAR;IACE,IAAMsB,kBAAkB,GAAG,CAAC,KAAKb,KAAL,CAAWF,cAAX,IAA6B,CAA9B,IAAmC,CAA9D;IACA,IAAMgB,kBAAkB,GAAG,CAAC,KAAKd,KAAL,CAAWF,cAAX,IAA6B,CAA9B,IAAmC,CAA9D;IAEA,OACEL;MAAKW,SAAS,EAAC;IAAf,GACEX,oBAACsB,uBAAD,EAAK;MAACX,SAAS,EAAC,kCAAX;MAA8CY,EAAE,EAAE,iBAAeH;IAAjE,CAAL,EAA0F,UAA1F,CADF,EAEG,KAAKb,KAAL,CAAWiB,SAAX,IAAwBxB,+CAF3B,EAGEA,oBAACsB,uBAAD,EAAK;MAACX,SAAS,EAAC,kCAAX;MAA8CY,EAAE,EAAE,iBAAeF;IAAjE,CAAL,EAA0F,MAA1F,CAHF,CADF;EAOD,CAXO;;EAYV;AAAC,CAhED,CAAwBrB,KAAK,CAACyB,aAA9B;;AAkEAC,kBAAeC,sBACb,UAACC,KAAD,EAAwB;EAAK,YAAK,CAACC,gBAAN;AAAsB,CADtC,EACwC;AACrDC,qBAAqB,CAACC,cAFT,CAEwB;AAFxB,EAGbjC,SAHa,CAAf","names":["__extends","FetchData","ensureDataFetched","React","Fragment","id","renderForecastsTable","renderPagination","startDateIndex","parseInt","props","match","params","requestWeatherForecasts","className","forecasts","map","forecast","key","date","temperatureC","temperatureF","summary","prevStartDateIndex","nextStartDateIndex","react_router_dom_1","to","isLoading","PureComponent","exports","react_redux_1","state","weatherForecasts","WeatherForecastsStore","actionCreators"],"sources":["C:\\Users\\manue\\Downloads\\97b922f26a01\\Prueba\\AcercaTest\\Vehiculos_FRONT\\ClientApp\\src\\components\\FetchData.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { ApplicationState } from '../store';\r\nimport * as WeatherForecastsStore from '../store/WeatherForecasts';\r\n\r\n// At runtime, Redux will merge together...\r\ntype WeatherForecastProps =\r\n  WeatherForecastsStore.WeatherForecastsState // ... state we've requested from the Redux store\r\n  & typeof WeatherForecastsStore.actionCreators // ... plus action creators we've requested\r\n  & RouteComponentProps<{ startDateIndex: string }>; // ... plus incoming routing parameters\r\n\r\n\r\nclass FetchData extends React.PureComponent<WeatherForecastProps> {\r\n  // This method is called when the component is first added to the document\r\n  public componentDidMount() {\r\n    this.ensureDataFetched();\r\n  }\r\n\r\n  // This method is called when the route parameters change\r\n  public componentDidUpdate() {\r\n    this.ensureDataFetched();\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 id=\"tabelLabel\">Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server and working with URL parameters.</p>\r\n        {this.renderForecastsTable()}\r\n        {this.renderPagination()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private ensureDataFetched() {\r\n    const startDateIndex = parseInt(this.props.match.params.startDateIndex, 10) || 0;\r\n    this.props.requestWeatherForecasts(startDateIndex);\r\n  }\r\n\r\n  private renderForecastsTable() {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.forecasts.map((forecast: WeatherForecastsStore.WeatherForecast) =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  private renderPagination() {\r\n    const prevStartDateIndex = (this.props.startDateIndex || 0) - 5;\r\n    const nextStartDateIndex = (this.props.startDateIndex || 0) + 5;\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-between\">\r\n        <Link className='btn btn-outline-secondary btn-sm' to={`/fetch-data/${prevStartDateIndex}`}>Previous</Link>\r\n        {this.props.isLoading && <span>Loading...</span>}\r\n        <Link className='btn btn-outline-secondary btn-sm' to={`/fetch-data/${nextStartDateIndex}`}>Next</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  (state: ApplicationState) => state.weatherForecasts, // Selects which state properties are merged into the component's props\r\n  WeatherForecastsStore.actionCreators // Selects which action creators are merged into the component's props\r\n)(FetchData as any);\r\n"]},"metadata":{},"sourceType":"module"}